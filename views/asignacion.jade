doctype html
html
    head
        title Admin
        meta(charset='UTF-8')
        script(src="/socket.io/socket.io.js")
        script(type='text/javascript', src='http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js')
        script(src='/javascripts/administrador.js')
        link(rel='stylesheet', href='stylesheets/bootstrap.css')
        script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/jquery/1.9.0/jquery.min.js')
        script(src="/javascripts/fb-log.js")

    body
        script.
            // This is called with the results from from FB.getLoginStatus().
            function statusChangeCallback(response) {
                console.log('statusChangeCallback');
                console.log(response);
                // The response object is returned with a status field that lets the
                // app know the current login status of the person.
                // Full docs on the response object can be found in the documentation
                // for FB.getLoginStatus().
                if (response.status === 'connected') {
                    // Logged into your app and Facebook.
                    testAPI();
                } else if (response.status === 'not_authorized') {
                    // The person is logged into Facebook, but not your app.
                    document.getElementById('status').innerHTML = 'Please log ' +
                            'into this app.';
                } else {
                    // The person is not logged into Facebook, so we're not sure if
                    // they are logged into this app or not.
                    document.getElementById('status').innerHTML = 'Please log ' +
                            'into Facebook.';
                }
            }
            // This function is called when someone finishes with the Login
            // Button.  See the onlogin handler attached to it in the sample
            // code below.
            function checkLoginState() {
                FB.getLoginStatus(function (response) {
                    statusChangeCallback(response);
                });
            }
            window.fbAsyncInit = function () {
                FB.init({
                    appId: '1080806451981964',
                    cookie: true,  // enable cookies to allow the server to access
                    // the session
                    xfbml: true,  // parse social plugins on this page
                    version: 'v2.5' // use graph api version 2.5
                });
                // Now that we've initialized the JavaScript SDK, we call
                // FB.getLoginStatus().  This function gets the state of the
                // person visiting this page and can return one of three states to
                // the callback you provide.  They can be:
                //
                // 1. Logged into your app ('connected')
                // 2. Logged into Facebook, but not your app ('not_authorized')
                // 3. Not logged into Facebook and can't tell if they are logged into
                //    your app or not.
                //
                // These three cases are handled in the callback function.
                FB.getLoginStatus(function (response) {
                    statusChangeCallback(response);
                });
            };
            // Load the SDK asynchronously
            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s);
                js.id = id;
                js.src = "//connect.facebook.net/en_US/sdk.js";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));
            // Here we run a very simple test of the Graph API after login is
            // successful.  See statusChangeCallback() for when this call is made.
            function testAPI() {
                console.log('Welcome!  Fetching your information.... ');
                FB.api('/me', function (response) {
                    console.log('Successful login for: ' + response.name);
                    document.getElementById('status').innerHTML =
                            'Bienvenido, ' + response.name + '!';
                });
            }

        nav.navbar.navbar-default
            .container-fluid
                .navbar-header
                    button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#bs-example-navbar-collapse-1')
                        span.sr-only Toggle navigation
                        span.icon-bar
                        span.icon-bar
                        span.icon-bar
                    a.navbar-brand(href='#') QualifyMe
                #bs-example-navbar-collapse-1.collapse.navbar-collapse
                    ul.nav.navbar-nav
                        li.active
                            a(href='#') Link
                        li
                            a(href='#')
                                | Link
                                span.sr-only (current)
                        li.dropdown
                            a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-expanded='false')
                                | Dropdown
                                span.caret
                            ul.dropdown-menu(role='menu')
                                li
                                    a(href='#') Action
                                li
                                    a(href='#') Another action
                                li
                                    a(href='#') Something else here
                                li.divider
                                li
                                    a(href='#') Separated link
                                li.divider
                                li
                                    a(href='#') One more separated link
                    form.navbar-form.navbar-left
                        .form-group
                            input.form-control(type='text', placeholder='#Profesor, #Curso')
                        button.btn.btn-default(type='submit') Get Tweets
                    ul.nav.navbar-nav.navbar-right
                        li
                            a(href='#') Link

    div(class='container')
        #status
        h1 Asignacion
        br
        div(ng-app='app', ng-controller='Asignacion' class='container')
            table(class="table table-striped table-hover")
                thead
                        th index
                        th Nombre Curso
                        th Hashtag Curso
                        th Nombre Profesor
                        th Apellido Profesor
                        th Hashtag Profesor
                tbody
                    tr(ng-repeat='tableData in tabelsData')
                        td {{$index+1}}
                        td
                            div(ng-hide='editingData[$index]') {{tableData.NCURSO}}
                            div(ng-show='editingData[$index]')


                        td
                            div(ng-hide='editingData[$index]') {{tableData.HTCURSO}}
                            div(ng-show='editingData[$index]')
                                select#repeatSelect(name='repeatSelect', ng-model='data_curso.repeatSelect')
                                    option(ng-repeat='option in data_curso.availableOptions', value='{{option.HASHTAG}}') {{option.HASHTAG}}

                                //input(type='text',class="form-control", ng-model='tableData.HASHTAG')
                        td
                            div(ng-hide='editingData[$index]') {{tableData.NPROF}}
                                div(ng-show='editingData[$index]')
                               // input(type='text',class="form-control", ng-model='tableData.HASHTAG')
                        td
                            div(ng-hide='editingData[$index]') {{tableData.APELLIDO}}
                                div(ng-show='editingData[$index]')
                               // input(type='text',class="form-control", ng-model='tableData.HASHTAG')
                        td
                            div(ng-hide='editingData[$index]') {{tableData.HTPROF}}
                            div(ng-show='editingData[$index]')
                                select#repeatSelec(name='repeatSelect', ng-model='data_prof.repeatSelect')
                                    option(ng-repeat='option in data_prof.availableOptions', value='{{option.HASHTAG}}') {{option.HASHTAG}}

                            // input(type='text',class="form-control", ng-model='tableData.HASHTAG')


                        td
                            button(ng-hide='editingData[$index]', ng-click='delete(tableData,$index)', class="btn btn-danger btn-sm") Eliminar
                            button(ng-show='editingData[$index]', ng-click='update(tableData)',  ng-style="{display:none}", class="btn btn-success btn-sm" ) Guardar
                            //button(ng-show='editingData[tableData.ID_PROFESOR]', ng-click='cancel(tableData)',  ng-style="{display:none}", class="btn btn-danger btn-sm" ) Cancelar

            button(ng-click='add()' class="btn btn-default") Agregar Curso
