doctype html
html
    script(type='text/javascript', src='http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js')
    head
        title Qualifier
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1')
        script(src="/socket.io/socket.io.js")
        link(rel='stylesheet', href='stylesheets/jquery.rateyo.min.css')
        link(rel='stylesheet', href='/css/bootstrap.min.css')
        link(rel='stylesheet', href='/stylesheets/TweetList.css')
        link(rel='stylesheet', type='text/css', href='stylesheets/jquery-comments.css')
        link(rel='stylesheet', type='text/css', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css')
        script(src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.18/angular.min.js')
        script(src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.18/angular-resource.min.js')
        script(src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.18/angular-sanitize.min.js')
        script(src='//cdnjs.cloudflare.com/ajax/libs/masonry/3.1.5/masonry.pkgd.min.js')
        script(src='//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js')
        script(src='//platform.twitter.com/widgets.js')
        script(src='/javascripts/TweetList.js')
        script(type='text/javascript', src='https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js')
        script(type='text/javascript', src='javascripts/jquery-comments.js')
        script(type='text/javascript', src='javascripts/comments-data.js')
        script(src="/javascripts/fb-log.js")
        script(src='/js/bootstrap.min.js')

    body(ng-app='Twitter', ng-controller='myCtrl')
        script(type='text/javascript').
            var local_data = !{JSON.stringify(data)};
        script.
            // This is called with the results from from FB.getLoginStatus().
            function statusChangeCallback(response) {
                //fb_login();
                //console.log('statusChangeCallback');
                //console.log(response);
                //console.log(response.authResponse.accessToken);
                // The response object is returned with a status field that lets the
                // app know the current login status of the person.
                // Full docs on the response object can be found in the documentation
                // for FB.getLoginStatus().
                if (response.status === 'connected') {
                    // Logged into your app and Facebook.
                    testAPI();
                } else if (response.status === 'not_authorized') {
                    // The person is logged into Facebook, but not your app.
                    document.getElementById('status').innerHTML = 'Please log ' +
                            'into this app.';
                    angular.element(document.getElementById('FB_Wrap')).scope().sh_fb_button();
                } else {
                    // The person is not logged into Facebook, so we're not sure if
                    // they are logged into this app or not.
                    document.getElementById('status').innerHTML = 'Please log ' +
                            'into Facebook.';

                    angular.element(document.getElementById('FB_Wrap')).scope().sh_fb_button();
                }

            }

            function fb_login() {
                FB.login(function (response) {
                    if (response.status === 'connected') {
                        // Logged into your app and Facebook.
                        testAPI();
                    } else if (response.status === 'not_authorized') {
                        // The person is logged into Facebook, but not your app.
                        document.getElementById('status').innerHTML = 'Please log ' +
                                'into Facebook.';
                    } else {
                        // The person is not logged into Facebook, so we're not sure if
                        // they are logged into this app or not.
                        document.getElementById('status').innerHTML = 'Please log ' +
                                'into Facebook.';
                    }
                }, {scope: 'public_profile,email,publish_actions'});
            }
            // This function is called when someone finishes with the Login
            // Button.  See the onlogin handler attached to it in the sample
            // code below.
            function checkLoginState() {
                FB.getLoginStatus(function (response) {
                    statusChangeCallback(response);
                });
            }
            window.fbAsyncInit = function () {
                FB.init({
                    appId: '1080806451981964',
                    cookie: true,  // enable cookies to allow the server to access
                    // the session
                    xfbml: true,  // parse social plugins on this page
                    version: 'v2.5' // use graph api version 2.5
                });
                // Now that we've initialized the JavaScript SDK, we call
                // FB.getLoginStatus().  This function gets the state of the
                // person visiting this page and can return one of three states to
                // the callback you provide.  They can be:
                //
                // 1. Logged into your app ('connected')
                // 2. Logged into Facebook, but not your app ('not_authorized')
                // 3. Not logged into Facebook and can't tell if they are logged into
                //    your app or not.
                //
                // These three cases are handled in the callback function.
                FB.getLoginStatus(function (response) {
                    statusChangeCallback(response);
                });
            };
            // Load the SDK asynchronously
            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s);
                js.id = id;
                js.src = "//connect.facebook.net/en_US/sdk.js";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));
            // Here we run a very simple test of the Graph API after login is
            // successful.  See statusChangeCallback() for when this call is made.
            function testAPI() {
                //console.log('Welcome!  Fetching your information.... ');
                FB.api('/me', function (response) {
                    //console.log('Successful login for: ' + response.name);
                    var post = local_data.id;//"1165440753479632_1165506266806414";
                    //console.log("POST: "+post);
                    addC(post);
                    display(false, post);
                    $('#comments-container').comments({
                        youText: response.name
                    });

                    FB.api('/me/picture', function (response) {
                        $('#comments-container').comments({
                            profilePictureURL: response.data.url
                        });

                    });

                });




            }
    //aquiva qualify.js
    script(type='text/javascript', src='javascripts/qualify.js')
    nav.navbar.navbar-default(ng-controller='TweetList' )
        .container-fluid
            .navbar-header
                button.navbar-toggle.collapsed(type='button', data-toggle='collapse', data-target='#bs-example-navbar-collapse-1')
                    span.sr-only Toggle navigation
                    span.icon-bar
                    span.icon-bar
                    span.icon-bar
                a.navbar-brand(href='/menu') QualifyMe
            #bs-example-navbar-collapse-1.collapse.navbar-collapse
                ul.nav.navbar-nav
                    li.active
                        a(href='#')
                            | Link
                            span.sr-only (current)
                    li
                        a(href='#') Link
                    li.dropdown
                        a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-expanded='false')
                            | Dropdown
                            span.caret
                        ul.dropdown-menu(role='menu')
                            li
                                a(href='#') Action
                            li
                                a(href='#') Another action
                            li
                                a(href='#') Something else here
                            li.divider
                            li
                                a(href='#') Separated link
                            li.divider
                            li
                                a(href='#') One more separated link
                form.navbar-form.navbar-left(ng-submit='getTweets()')
                    .form-group
                        input.form-control(type='text', placeholder='#Profesor, #Curso', ng-model='username')
                    button.btn.btn-default(type='submit') Get Tweets
                ul.nav.navbar-nav.navbar-right
                    li
                        a(href='#') Link

    h2(align='center') Rating General

    div(align='center')
        h4 {{'#' + profesor + ' ' + '#'+curso}}
        br

        h5 Puntuacion en redes sociales: {{Percent +'%'}}
        div(class="container")
            .row(align='center')
                .col-lg-4
                .col-lg-4
                    .bs-component
                        .progress.progress-striped.active
                            .progress-bar(ng-class="{'progress-bar-danger': Percent < 34, " +
                            "'progress-bar-warning': Percent < 67, " +
                            "'progress-bar-success': Percent > 66}"
                            ,ng-style="{ 'width': Percent + '%' }")

        br
        h5 Puntuacion en QualifyMe:
        div(id='rateYo1')
        br

        button(type='button',class='btn btn-success', ng-click='myFunc()') Qualify!
        br
        div(id='rating', ng-show='showMe' )
            div(class='container')
                h4 Votar
                p
                | Selecciona
                a(href='#') la puntuacion
                |  para cada uno de los aspectos requeridos.
                table(class='table-responsive')
                    thead
                      tr
                        th Metrica
                        th Puntuacion
                    tbody
                        tr
                          td Puntualidad:
                          td
                            div(id='rate_puntualidad')
                        tr
                            td Cumplimiento de horario establecido:
                            td
                                div(id='rate_hestablecido')
                        tr
                            td Asistencia
                            td
                                div(id='rate_asistencia')
                        tr
                            td Trato hacia los estudiantes
                            td
                                div(id='rate_trato')
                        tr
                            td Metodologia
                            td
                                div(id='rate_metodologia')
                        tr
                            td Objetividad
                            td
                                div(id='rate_objetividad')
                        tr
                            td Revision de Examenes
                            td
                                div(id='rate_revision')
                        tr
                            td Transparencia en cuadro de notas
                            td
                                div(id='rate_transparencia')
                        tr
                            td Comunicacion
                            td
                                div(id='rate_comunicacion')
                        tr
                            td
                            td
                                button(type='button',class='btn btn-primary', ng-click='myFunc()', onclick='get_votes()') Vote
    div(ng-show='false',class="container", align='center')
        .row(align='center')
            .col-lg-5
                .bs-component
                    .progress.progress-striped.active
                        .progress-bar(style='width: 100%')



    //script(type='text/javascript',src='javascripts/jquery.js')
    script(type='text/javascript',src='https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.0.1/jquery.rateyo.min.js')
    script(type='text/javascript', src='javascripts/rate.js')
    br
    br
    br
    div(class='container')
      div(ng-controller='TweetList', align='left')
        .row
            .col-lg-12
                h1
                    img#twitter-logo(src='images/Twitter_bird_logo_2012.png')
        #search-container.row
            .col-lg-3
                // this form will trigger the getTweets function in the javascript controller on submit
                form.input-group(ng-submit='getTweets()')
                    //span.input-group-addon #
                    // this text input is binded to a variable in the javascript controller
                    //input.form-control(type='text', placeholder='Hashtag', ng-model='username')
                    //span.input-group-btn
                        //button.btn.btn-default(type='submit') Get Tweets

        .row.clearfix
            .col-lg-12
                #tweet-list
                    // this div will repeat for every tweet object in the array using a template-expanding directive
                    .tweet-item(ng-repeat='tweet in tweetsResult')
                        // sanitized HTML binding
                        div(ng-bind-html='tweet.oEmbed.html', align='center')
                        // binding to Tweet source property
                        .tweet-details
                            | Tweeted from
                            span(ng-bind-html='tweet.source')
                            // play around with rendering different Tweet properties
                            // <p>{{tweet.user.screen_name}}</p>
                            // <p>{{tweet.text}}</p>
        .row
            .col-lg-12
                // this button will trigger the getMoreTweets function in the javascript controller
                button.load-more-btn.btn.btn-default(type='button', ng-click='getMoreTweets()') Get More Tweets
    br
    br

    script(type='text/javascript', src='javascripts/j-comments-load.js')
    div(class='container',id='FB_Wrap')
        .row
            .col-lg-12
                h1
                    img#twitter-logo(src='images/facebook-flat-vector-logo-400x400.png')
        #status
        fb:login-button(id='clickbutton',scope='public_profile,email',ng-show='fb_button', onlogin='checkLoginState();')

        .row
            .col-lg-12
                // this button will trigger the getMoreTweets function in the javascript controller
                button(type='button',class="btn btn-warning", ng-click='sh_fb()') {{ messageFB + ' FB comments!'}}
        br
        br
        div(id='comments-container', ng-show='showFB', ng-view='')

